import {
  color,
  getContrastingColor,
  hexToHsva,
  hsvaToHex,
  hsvaToRgba,
  rgbaToHsva,
  validHex
} from "./chunk-7DUP4DSB.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  require_jsx_runtime
} from "./chunk-7VLPLYP4.js";
import {
  __toESM,
  require_react
} from "./chunk-6FBSFQRG.js";

// node_modules/@uiw/react-color-compact/esm/index.js
var import_react5 = __toESM(require_react());

// node_modules/@uiw/react-color-editable-input/esm/index.js
var import_react = __toESM(require_react());
var import_react2 = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var _excluded = ["prefixCls", "placement", "label", "value", "className", "style", "labelStyle", "inputStyle", "onChange", "onBlur"];
var validHex2 = (hex) => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);
var getNumberValue = (value) => Number(String(value).replace(/%/g, ""));
var EditableInput = import_react.default.forwardRef((props, ref) => {
  var {
    prefixCls = "w-color-editable-input",
    placement = "bottom",
    label,
    value: initValue,
    className,
    style,
    labelStyle,
    inputStyle,
    onChange,
    onBlur
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  var [value, setValue] = (0, import_react2.useState)(initValue);
  var isFocus = (0, import_react2.useRef)(false);
  (0, import_react2.useEffect)(() => {
    if (props.value !== value) {
      if (!isFocus.current) {
        setValue(props.value);
      }
    }
  }, [props.value]);
  function handleChange(evn, valInit) {
    var value2 = valInit || evn.target.value;
    if (validHex2(value2)) {
      onChange && onChange(evn, value2);
    }
    var val = getNumberValue(value2);
    if (!isNaN(val)) {
      onChange && onChange(evn, val);
    }
    setValue(value2);
  }
  function handleBlur(evn) {
    isFocus.current = false;
    setValue(props.value);
    onBlur && onBlur(evn);
  }
  var placementStyle = {};
  if (placement === "bottom") {
    placementStyle["flexDirection"] = "column";
  }
  if (placement === "top") {
    placementStyle["flexDirection"] = "column-reverse";
  }
  if (placement === "left") {
    placementStyle["flexDirection"] = "row-reverse";
  }
  var wrapperStyle = _extends({
    "--editable-input-label-color": "rgb(153, 153, 153)",
    "--editable-input-box-shadow": "rgb(204 204 204) 0px 0px 0px 1px inset",
    "--editable-input-color": "#666",
    position: "relative",
    alignItems: "center",
    display: "flex",
    fontSize: 11
  }, placementStyle, style);
  var editableStyle = _extends({
    width: "100%",
    paddingTop: 2,
    paddingBottom: 2,
    paddingLeft: 3,
    paddingRight: 3,
    fontSize: 11,
    background: "transparent",
    boxSizing: "border-box",
    border: "none",
    color: "var(--editable-input-color)",
    boxShadow: "var(--editable-input-box-shadow)"
  }, inputStyle);
  return (0, import_jsx_runtime2.jsxs)("div", {
    className: [prefixCls, className || ""].filter(Boolean).join(" "),
    style: wrapperStyle,
    children: [(0, import_jsx_runtime.jsx)("input", _extends({
      ref,
      value,
      onChange: handleChange,
      onBlur: handleBlur,
      autoComplete: "off",
      onFocus: () => isFocus.current = true
    }, other, {
      style: editableStyle
    })), label && (0, import_jsx_runtime.jsx)("span", {
      style: _extends({
        color: "var(--editable-input-label-color)",
        textTransform: "capitalize"
      }, labelStyle),
      children: label
    })]
  });
});
EditableInput.displayName = "EditableInput";
var esm_default = EditableInput;

// node_modules/@uiw/react-color-editable-input-rgba/esm/index.js
var import_react3 = __toESM(require_react());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var _excluded2 = ["prefixCls", "hsva", "placement", "rProps", "gProps", "bProps", "aProps", "className", "style", "onChange"];
var EditableInputRGBA = import_react3.default.forwardRef((props, ref) => {
  var {
    prefixCls = "w-color-editable-input-rgba",
    hsva,
    placement = "bottom",
    rProps = {},
    gProps = {},
    bProps = {},
    aProps = {},
    className,
    style,
    onChange
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);
  var rgba = hsva ? hsvaToRgba(hsva) : {};
  function handleBlur(evn) {
    var value = Number(evn.target.value);
    if (value && value > 255) {
      evn.target.value = "255";
    }
    if (value && value < 0) {
      evn.target.value = "0";
    }
  }
  var handleChange = (value, type, evn) => {
    if (typeof value === "number") {
      if (type === "a") {
        if (value < 0)
          value = 0;
        if (value > 100)
          value = 100;
        onChange && onChange(color(rgbaToHsva(_extends({}, rgba, {
          a: value / 100
        }))));
      }
      if (value > 255) {
        value = 255;
        evn.target.value = "255";
      }
      if (value < 0) {
        value = 0;
        evn.target.value = "0";
      }
      if (type === "r") {
        onChange && onChange(color(rgbaToHsva(_extends({}, rgba, {
          r: value
        }))));
      }
      if (type === "g") {
        onChange && onChange(color(rgbaToHsva(_extends({}, rgba, {
          g: value
        }))));
      }
      if (type === "b") {
        onChange && onChange(color(rgbaToHsva(_extends({}, rgba, {
          b: value
        }))));
      }
    }
  };
  return (0, import_jsx_runtime4.jsxs)("div", _extends({
    ref,
    className: [prefixCls, className || ""].filter(Boolean).join(" ")
  }, other, {
    style: _extends({
      fontSize: 11,
      display: "flex"
    }, style),
    children: [(0, import_jsx_runtime3.jsx)(esm_default, _extends({
      label: "R",
      value: rgba.r || 0,
      onBlur: handleBlur,
      placement,
      onChange: (evn, val) => handleChange(val, "r", evn)
    }, rProps, {
      style: _extends({}, rProps.style)
    })), (0, import_jsx_runtime3.jsx)(esm_default, _extends({
      label: "G",
      value: rgba.g || 0,
      onBlur: handleBlur,
      placement,
      onChange: (evn, val) => handleChange(val, "g", evn)
    }, gProps, {
      style: _extends({
        marginLeft: 5
      }, rProps.style)
    })), (0, import_jsx_runtime3.jsx)(esm_default, _extends({
      label: "B",
      value: rgba.b || 0,
      onBlur: handleBlur,
      placement,
      onChange: (evn, val) => handleChange(val, "b", evn)
    }, bProps, {
      style: _extends({
        marginLeft: 5
      }, bProps.style)
    })), aProps && (0, import_jsx_runtime3.jsx)(esm_default, _extends({
      label: "A",
      value: rgba.a ? parseInt(String(rgba.a * 100), 10) : 0,
      onBlur: handleBlur,
      placement,
      onChange: (evn, val) => handleChange(val, "a", evn)
    }, aProps, {
      style: _extends({
        marginLeft: 5
      }, aProps.style)
    }))]
  }));
});
EditableInputRGBA.displayName = "EditableInputRGBA";
var esm_default2 = EditableInputRGBA;

// node_modules/@uiw/react-color-swatch/esm/index.js
var import_react4 = __toESM(require_react());
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var _excluded3 = ["prefixCls", "className", "color", "colors", "style", "rectProps", "onChange", "addonAfter", "addonBefore", "rectRender"];
var Swatch = import_react4.default.forwardRef((props, ref) => {
  var {
    prefixCls = "w-color-swatch",
    className,
    color: color2,
    colors = [],
    style,
    rectProps = {},
    onChange,
    addonAfter,
    addonBefore,
    rectRender
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded3);
  var rectStyle = _extends({
    "--swatch-background-color": "rgb(144, 19, 254)",
    background: "var(--swatch-background-color)",
    height: 15,
    width: 15,
    marginRight: 5,
    marginBottom: 5,
    cursor: "pointer",
    position: "relative",
    outline: "none",
    borderRadius: 2
  }, rectProps.style);
  var handleClick = (hex, evn) => {
    onChange && onChange(hexToHsva(hex), color(hexToHsva(hex)), evn);
  };
  return (0, import_jsx_runtime6.jsxs)("div", _extends({
    ref
  }, other, {
    className: [prefixCls, className || ""].filter(Boolean).join(" "),
    style: _extends({
      display: "flex",
      flexWrap: "wrap",
      position: "relative"
    }, style),
    children: [addonBefore && import_react4.default.isValidElement(addonBefore) && addonBefore, colors && Array.isArray(colors) && colors.map((item, idx) => {
      var title = "";
      var background = "";
      if (typeof item === "string") {
        title = item;
        background = item;
      }
      if (typeof item === "object" && item.color) {
        title = item.title || item.color;
        background = item.color;
      }
      var checked = color2 && color2.toLocaleLowerCase() === background.toLocaleLowerCase();
      if (rectRender) {
        return rectRender({
          key: idx,
          title,
          color: background,
          checked: !!checked,
          style: _extends({}, rectStyle, {
            background
          }),
          onClick: (evn) => handleClick(background, evn)
        });
      }
      var child = rectProps.children && import_react4.default.isValidElement(rectProps.children) ? import_react4.default.cloneElement(rectProps.children, {
        color: background,
        checked
      }) : null;
      return (0, import_jsx_runtime5.jsx)("div", _extends({
        tabIndex: 0,
        title,
        onClick: (evn) => handleClick(background, evn)
      }, rectProps, {
        children: child,
        style: _extends({}, rectStyle, {
          background
        })
      }), idx);
    }), addonAfter && import_react4.default.isValidElement(addonAfter) && addonAfter]
  }));
});
Swatch.displayName = "Swatch";
var esm_default3 = Swatch;

// node_modules/@uiw/react-color-compact/esm/index.js
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var _excluded4 = ["prefixCls", "className", "style", "onChange", "color", "colors"];
var COLORS = ["#4D4D4D", "#999999", "#FFFFFF", "#F44E3B", "#FE9200", "#FCDC00", "#DBDF00", "#A4DD00", "#68CCCA", "#73D8FF", "#AEA1FF", "#FDA1FF", "#333333", "#808080", "#cccccc", "#D33115", "#E27300", "#FCC400", "#B0BC00", "#68BC00", "#16A5A5", "#009CE0", "#7B64FF", "#FA28FF", "#000000", "#666666", "#B3B3B3", "#9F0500", "#C45100", "#FB9E00", "#808900", "#194D33", "#0C797D", "#0062B1", "#653294", "#AB149E"];
function Point(props) {
  if (!props.checked)
    return null;
  return (0, import_jsx_runtime7.jsx)("div", {
    style: {
      height: 5,
      width: 5,
      borderRadius: "50%",
      backgroundColor: getContrastingColor(props.color)
    }
  });
}
var Compact = import_react5.default.forwardRef((props, ref) => {
  var {
    prefixCls = "w-color-compact",
    className,
    style,
    onChange,
    color: color2,
    colors = COLORS
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded4);
  var hsva = typeof color2 === "string" && validHex(color2) ? hexToHsva(color2) : color2;
  var hex = color2 ? hsvaToHex(hsva).replace(/^#/, "") : "";
  var handleChangeCallback = (0, import_react5.useCallback)((hsv) => onChange && onChange(color(hsv)), []);
  var handleHex = (value, evn) => {
    if (typeof value === "string" && validHex(value) && /(3|6)/.test(String(value.length))) {
      handleChangeCallback(hexToHsva(value));
    }
  };
  var rgbProps = {
    style: {
      alignItems: "baseline"
    },
    inputStyle: {
      boxShadow: "none",
      backgroundColor: "transparent",
      outline: 0
    }
  };
  var wrapperStyle = _extends({
    "--compact-background-color": "#f6f6f6",
    background: "var(--compact-background-color)",
    borderRadius: 3,
    display: "flex",
    width: 240,
    flexWrap: "wrap",
    paddingTop: 5,
    paddingLeft: 5
  }, style);
  return (0, import_jsx_runtime8.jsxs)("div", _extends({
    ref,
    style: wrapperStyle,
    className: [prefixCls, className || ""].filter(Boolean).join(" ")
  }, other, {
    children: [(0, import_jsx_runtime7.jsx)(esm_default3, {
      colors,
      color: color2 ? hsvaToHex(hsva) : void 0,
      rectProps: {
        children: (0, import_jsx_runtime7.jsx)(Point, {}),
        style: {
          display: "flex",
          alignItems: "center",
          justifyContent: "center"
        }
      },
      onChange: (hsvColor) => handleChangeCallback(hsvColor)
    }), (0, import_jsx_runtime8.jsxs)("div", {
      style: {
        display: "flex",
        margin: "0 4px 3px 0"
      },
      children: [(0, import_jsx_runtime7.jsx)(esm_default, {
        onChange: (evn, val) => handleHex(val, evn),
        labelStyle: {
          paddingRight: 5,
          marginTop: -1
        },
        value: hex.toLocaleUpperCase(),
        label: (0, import_jsx_runtime7.jsx)("div", {
          style: {
            width: 8,
            height: 8,
            backgroundColor: "#" + hex
          }
        }),
        inputStyle: {
          outline: "none",
          boxShadow: "initial",
          background: "transparent"
        },
        style: {
          flexDirection: "row-reverse",
          flex: "1 1 0%",
          minWidth: 80
        }
      }), (0, import_jsx_runtime7.jsx)(esm_default2, {
        hsva,
        placement: "left",
        onChange: (result) => handleChangeCallback(result.hsva),
        aProps: false,
        rProps: rgbProps,
        gProps: rgbProps,
        bProps: rgbProps
      })]
    })]
  }));
});
Compact.displayName = "Compact";
var esm_default4 = Compact;
export {
  esm_default4 as default
};
//# sourceMappingURL=@uiw_react-color-compact.js.map
